name: Deploy Spring Boot to EC2

on:
  push:
    branches: 'hotfix/be/#48'  # hotfix 브랜치 push 시 작동

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean :app:bootJar -x test

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSHKEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "app/build/libs/*.jar"
          target: "/home/${{ secrets.EC2_USER }}/githubaction"

      - name: Run commands on EC2
        uses: appleboy/ssh-action@v1.0.3
        env:
          SPRING_PROFILES_ACTIVE: prod
          DB_PROD_HOST: ${{ secrets.DB_PROD_HOST }}
          DB_PROD_USERNAME: ${{ secrets.DB_PROD_USERNAME }}
          DB_PROD_PASSWORD: ${{ secrets.DB_PROD_PASSWORD }}
          DB_PROD_PORT: ${{ secrets.DB_PROD_PORT }}
          DB_PROD_DATABASE: ${{ secrets.DB_PROD_DATABASE }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET }}
          JWT_HEADER: ${{ secrets.JWT_HEADER }}
          JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
          JWT_EXPIRATION_ACCESS: ${{ secrets.JWT_EXPIRATION_ACCESS }}
          JWT_EXPIRATION_REFRESH: ${{ secrets.JWT_EXPIRATION_REFRESH }}
          AWS_S3_ACCESSKEY: ${{ secrets.AWS_S3_ACCESSKEY }}
          AWS_S3_SECRETKEY: ${{ secrets.AWS_S3_SECRETKEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL }}

        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSHKEY }}
          port: ${{ secrets.EC2_PORT }}
          envs: SPRING_PROFILES_ACTIVE,DB_PROD_HOST,DB_PROD_USERNAME,DB_PROD_PASSWORD,DB_PROD_DATABASE,DB_PROD_PORT,JWT_SECRET_KEY,JWT_HEADER,JWT_PREFIX,JWT_EXPIRATION_ACCESS,JWT_EXPIRATION_REFRESH,AWS_S3_ACCESSKEY,AWS_S3_SECRETKEY
          script: |
            #!/bin/bash
            set -e
            cd /home/${{ secrets.EC2_USER }}/githubaction
            if [ -f app.pid ]; then
              kill -15 $(cat app.pid) || true
              rm -f app.pid
            fi
            # 가장 최근 jar 찾기
            JAR=$(ls -t app/build/libs/*.jar | head -n 1)
            # 백그라운드 실행(로그 아웃해도 유지)
            rm app.log
            touch app.log
            nohup java -jar "$JAR" --spring.profiles.active=prod > app.log 2>&1 & echo $! > app.pid
